<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebApi</name>
    </assembly>
    <members>
        <member name="M:WebApi.Controllers.v1.AccountController.Authenticate(Application.Features.Account.Commands.Authenticate.AuthenticationCommand)">
            <summary>
            Authenticate a User.
            </summary>
            <param name="command"></param>
            <returns>An authenticated User</returns>
            <response code="200">The authenticated User</response>
            <response code="400">If the command is null</response>            
        </member>
        <member name="M:WebApi.Controllers.v1.AccountController.Register(Application.Features.Account.Commands.RegisterUser.RegisterUserCommand)">
            <summary>
            Creates a User Account.
            </summary>
            <param name="command"></param>
            <returns>A newly created User Account</returns>
            <response code="200">Returns the newly User Account</response>
            <response code="400">If the command is null</response>           
        </member>
        <member name="M:WebApi.Controllers.v1.AccountController.ConfirmEmailAsync(Application.Features.Account.Queries.ConfirmEmail.ConfirmEmailQuery)">
            <summary>
            Confirm user's email.
            </summary>
            <param name="command"></param>
            <returns>Confirm a newly created User Account's email</returns>
            <response code="200">Returns confirmation success message</response>
            <response code="400">If the command is not valide</response>           
        </member>
        <member name="M:WebApi.Controllers.v1.AccountController.ForgotPasswordAsync(Application.Features.Account.Commands.ForgotPassword.ForgotPasswordCommand)">
            <summary>
            Generate a Reset Token for a forgotten password.
            </summary>
            <param name="command"></param>
            <returns>Generate a Reset Token for a forgotten password</returns>
            <response code="200">Returns the generated password reset token</response>
            <response code="400">If the command is not valide</response>           
        </member>
        <member name="M:WebApi.Controllers.v1.AccountController.ResetPasswordAsync(Application.Features.Account.Commands.ResetPassword.ResetPasswordCommand)">
            <summary>
            Confirm user's email.
            </summary>
            <param name="command"></param>
            <returns>Confirm a newly created User Account's email</returns>
            <response code="200">Returns confirmation success message</response>
            <response code="400">If the command is not valide</response>           
        </member>
        <member name="M:WebApi.Controllers.v1.AccountController.Refresh(Application.Features.Account.Commands.RefreshAccessToken.RefreshTokensCommand)">
            <summary>
            Refreshes a Token.
            </summary>
            <param name="command"></param>
            <returns>A newly created Token</returns>
            <response code="201">Returns the newly created command</response>
            <response code="400">If the command is null</response>            
        </member>
        <member name="M:WebApi.Controllers.v1.AccountController.Revoke">
            <summary>
            Revokes a Token.
            </summary>
            <returns>A newly created Token</returns>
            <response code="201">Returns the newly created command</response>
            <response code="400">If the command is null</response>            
        </member>
        <member name="M:WebApi.Controllers.v1.CategoriesController.Get(Application.Features.Categories.Queries.GetPagedList.GetCategoriesQuery)">
            <summary>
            return categories that matche the criteria
            </summary>
            <param name="categoriesQuery"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.CategoriesController.Get(System.Guid)">
            <summary>
            Retreives a specific Category.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.CategoriesController.Post(Application.Features.Categories.Commands.Create.CreateCategoryCommand)">
            <summary>
            Creates a Category.
            </summary>
            <param name="command"></param>
            <returns>A newly created Category</returns>
            <response code="201">Returns the newly created command</response>
            <response code="400">If the command is null</response>            
        </member>
        <member name="M:WebApi.Controllers.v1.CategoriesController.Put(System.Guid,Application.Features.Categories.Commands.Update.UpdateCategoryCommand)">
            <summary>
            Update a specific Category.
            </summary>
            <param name="id"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.CategoriesController.Delete(System.Guid)">
            <summary>
            Deletes a specific Category.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.InventoryLevelsController.Get(Application.Features.InventoryLevels.Queries.GetPagedList.GetInventoryLevelsQuery)">
            <summary>
            return inventoryLevels that matche the criteria
            </summary>
            <param name="inventoryLevelsQuery"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.InventoryLevelsController.Get(System.Guid)">
            <summary>
            Retreives a specific InventoryLevel.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.InventoryLevelsController.Post(Application.Features.InventoryLevels.Commands.Create.CreateInventoryLevelCommand)">
            <summary>
            Creates a InventoryLevel.
            </summary>
            <param name="command"></param>
            <returns>A newly created InventoryLevel</returns>
            <response code="201">Returns the newly created command</response>
            <response code="400">If the command is null</response>            
        </member>
        <member name="M:WebApi.Controllers.v1.InventoryLevelsController.Put(System.Guid,Application.Features.InventoryLevels.Commands.Update.UpdateInventoryLevelCommand)">
            <summary>
            Update a specific InventoryLevel.
            </summary>
            <param name="id"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.InventoryLevelsController.Delete(System.Guid)">
            <summary>
            Deletes a specific InventoryLevel.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.ItemsController.Get(Application.Features.Items.Queries.GetPagedList.GetItemsQuery)">
            <summary>
            return items that matche the criteria
            </summary>
            <param name="itemsQuery"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.ItemsController.Get(System.Guid)">
            <summary>
            Retreives a specific Item.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.ItemsController.Post(Application.Features.Items.Commands.Create.CreateItemCommand)">
            <summary>
            Creates a Item.
            </summary>
            <param name="command"></param>
            <returns>A newly created Item</returns>
            <response code="201">Returns the newly created command</response>
            <response code="400">If the command is null</response>            
        </member>
        <member name="M:WebApi.Controllers.v1.ItemsController.Put(System.Guid,Application.Features.Items.Commands.Update.UpdateItemCommand)">
            <summary>
            Update a specific Item.
            </summary>
            <param name="id"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.ItemsController.Delete(System.Guid)">
            <summary>
            Deletes a specific Item.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.PaymentsController.Get(Application.Features.Payments.Queries.GetPagedList.GetPaymentsQuery)">
            <summary>
            return payments that matche the criteria
            </summary>
            <param name="paymentsQuery"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.PaymentsController.Get(System.Guid)">
            <summary>
            Retreives a specific Payment.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.PaymentsController.Post(Application.Features.Payments.Commands.Create.CreatePaymentCommand)">
            <summary>
            Creates a Payment.
            </summary>
            <param name="command"></param>
            <returns>A newly created Payment</returns>
            <response code="201">Returns the newly created command</response>
            <response code="400">If the command is null</response>            
        </member>
        <member name="M:WebApi.Controllers.v1.PaymentsController.Put(System.Guid,Application.Features.Payments.Commands.Update.UpdatePaymentCommand)">
            <summary>
            Update a specific Payment.
            </summary>
            <param name="id"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.PaymentsController.Delete(System.Guid)">
            <summary>
            Deletes a specific Payment.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.ShoppingCartItemsController.Get(Application.Features.ShoppingCartItems.Queries.GetPagedList.GetShoppingCartItemsQuery)">
            <summary>
            return shoppingCartItems that matche the criteria
            </summary>
            <param name="shoppingCartItemsQuery"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.ShoppingCartItemsController.Get(System.Guid)">
            <summary>
            Retreives a specific ShoppingCartItem.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.ShoppingCartItemsController.Post(Application.Features.ShoppingCartItems.Commands.Create.CreateShoppingCartItemCommand)">
            <summary>
            Creates a ShoppingCartItem.
            </summary>
            <param name="command"></param>
            <returns>A newly created ShoppingCartItem</returns>
            <response code="201">Returns the newly created command</response>
            <response code="400">If the command is null</response>            
        </member>
        <member name="M:WebApi.Controllers.v1.ShoppingCartItemsController.Put(System.Guid,Application.Features.ShoppingCartItems.Commands.Update.UpdateShoppingCartItemCommand)">
            <summary>
            Update a specific ShoppingCartItem.
            </summary>
            <param name="id"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.ShoppingCartItemsController.Delete(System.Guid)">
            <summary>
            Deletes a specific ShoppingCartItem.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.ShoppingCartsController.Get(Application.Features.ShoppingCarts.Queries.GetPagedList.GetShoppingCartsQuery)">
            <summary>
            return shoppingCarts that matche the criteria
            </summary>
            <param name="shoppingCartsQuery"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.ShoppingCartsController.Get(System.Guid)">
            <summary>
            Retreives a specific ShoppingCart.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.ShoppingCartsController.Post(Application.Features.ShoppingCarts.Commands.Create.CreateShoppingCartCommand)">
            <summary>
            Creates a ShoppingCart.
            </summary>
            <param name="command"></param>
            <returns>A newly created ShoppingCart</returns>
            <response code="201">Returns the newly created command</response>
            <response code="400">If the command is null</response>            
        </member>
        <member name="M:WebApi.Controllers.v1.ShoppingCartsController.Put(System.Guid,Application.Features.ShoppingCarts.Commands.Update.UpdateShoppingCartCommand)">
            <summary>
            Update a specific ShoppingCart.
            </summary>
            <param name="id"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.ShoppingCartsController.Delete(System.Guid)">
            <summary>
            Deletes a specific ShoppingCart.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.ShopsController.Get(Application.Features.Shops.Queries.GetPagedList.GetShopsQuery)">
            <summary>
            return shops that matche the criteria
            </summary>
            <param name="shopsQuery"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.ShopsController.Get(System.Guid)">
            <summary>
            Retreives a specific Shop.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.ShopsController.Post(Application.Features.Shops.Commands.Create.CreateShopCommand)">
            <summary>
            Creates a Shop.
            </summary>
            <param name="command"></param>
            <returns>A newly created Shop</returns>
            <response code="201">Returns the newly created command</response>
            <response code="400">If the command is null</response>            
        </member>
        <member name="M:WebApi.Controllers.v1.ShopsController.Put(System.Guid,Application.Features.Shops.Commands.Update.UpdateShopCommand)">
            <summary>
            Update a specific Shop.
            </summary>
            <param name="id"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:WebApi.Controllers.v1.ShopsController.Delete(System.Guid)">
            <summary>
            Deletes a specific Shop.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
    </members>
</doc>
